{"version":3,"sources":["components/AddCathegory.js","helpers/getGrip.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifts.js","GiftExpertApp.jsx","index.js"],"names":["AddCathegory","setCathegories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","caths","type","value","onChange","target","getGifs","cathegory","a","url","decodeURI","fetch","resp","json","data","gifs","map","img","id","title","image","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifts","GiftExpertApp","cathegories","ReactDOM","render","document","getElementById"],"mappings":"qMAmCeA,EA/BM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACvB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACC,sBAAMC,SAVc,SAACC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAe,SAACS,GAAD,OAAYP,GAAZ,mBAA2BO,OAC1CN,EAAc,MAKf,SACC,uBACCO,KAAK,OACLC,MAAOT,EACPU,SAlBwB,SAACP,GAC3BF,EAAcE,EAAEQ,OAAOF,a,+BCRZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,iDACgCC,UACrDH,GAFqB,+DAIHI,MAAMF,GAJH,cAIhBG,EAJgB,gBAKCA,EAAKC,OALN,uBAKdC,EALc,EAKdA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CACNC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,MAAK,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBb,QAXhB,kBAcfM,GAde,4CAAH,sDCEPQ,EAAc,SAAC,GAAsB,IAApBJ,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACpC,OACC,sBAAKI,UAAU,yCAAf,UACC,qBAAKC,IAAKL,EAAOM,IAAKP,IACtB,4BAAIA,QCDMQ,EAAU,SAAC,GAAmB,IAAjBpB,EAAgB,EAAhBA,UACzB,ECH4B,SAACA,GAC7B,MAA0Bd,mBAAS,CAClCqB,KAAM,GACNc,SAAS,IAFV,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACTzB,EAAQC,GAAWyB,MAAK,SAACC,GACxBC,YAAW,WACVJ,EAAS,CACRhB,KAAMmB,EACNL,SAAS,MAER,UAEF,CAACrB,IAEGsB,EDd2BM,CAAc5B,GAAlCc,EAAd,EAAQP,KAAcc,EAAtB,EAAsBA,QAEtB,OACC,qCACC,oBAAIJ,UAAU,oCAAd,SACEjB,IAGDqB,GACA,mBAAGJ,UAAU,mCAAb,wBAKD,qBAAKA,UAAU,YAAf,SACEH,EAAOL,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEMZkB,EAvBO,WACrB,MAAsC3C,mBAAS,CAC9C,iBADD,mBAAO4C,EAAP,KAAoB7C,EAApB,KAOA,OACC,qCACC,+CACA,cAAC,EAAD,CAAcA,eAAgBA,IAE9B,uBAEA,6BACE6C,EAAYrB,KAAI,SAACT,GAAD,OAChB,cAAC,EAAD,CAAyBA,UAAWA,GAAtBA,Y,MChBnB+B,IAASC,OACL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.2b51549c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCathegory = ({ setCathegories }) => {\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst handlerInputchange = (e) => {\r\n\t\tsetInputValue(e.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (inputValue.trim().length > 2) {\r\n\t\t\tsetCathegories((caths) => [inputValue, ...caths]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\tonChange={handlerInputchange}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nAddCathegory.propTypes = {\r\n\tsetCathegories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCathegory;\r\n","export const getGifs = async (cathegory) => {\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${decodeURI(\r\n\t\tcathegory,\r\n\t)}&limit=10&api_key=gERh8NcTy1bYim6lZk9LahAQzKi3a9SO`;\r\n\tconst resp = await fetch(url);\r\n\tconst { data } = await resp.json();\r\n\r\n\tconst gifs = data.map((img) => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\timage: img.images?.downsized_medium.url,\r\n\t\t};\r\n\t});\r\n\treturn gifs;\r\n};\r\n","import React from 'react';\r\n\r\nexport const GifGridItem = ({ title, image }) => {\r\n\treturn (\r\n\t\t<div className='card animate__animated animate__fadeIn'>\r\n\t\t\t<img src={image} alt={title} />\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\n\r\nimport { useFetchGifts } from '../hooks/useFetchGifts';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ cathegory }) => {\r\n\tconst { data: images, loading } = useFetchGifts(cathegory);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className='animate__animated animate__fadeIn'>\r\n\t\t\t\t{cathegory}\r\n\t\t\t</h3>\r\n\r\n\t\t\t{loading && (\r\n\t\t\t\t<p className='animate__animated animate__flash'>\r\n\t\t\t\t\tLoading...\r\n\t\t\t\t</p>\r\n\t\t\t)}\r\n\r\n\t\t\t<div className='card-grid'>\r\n\t\t\t\t{images.map((img) => (\r\n\t\t\t\t\t<GifGridItem key={img.id} {...img} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGrip';\r\n\r\nexport const useFetchGifts = (cathegory) => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(cathegory).then((imgs) => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsetState({\r\n\t\t\t\t\tdata: imgs,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t}, 3000);\r\n\t\t});\r\n\t}, [cathegory]);\r\n\r\n\treturn state;\r\n};\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport AddCathegory from './components/AddCathegory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GiftExpertApp = () => {\r\n\tconst [cathegories, setCathegories] = useState([\r\n\t\t'Rick & Morty',\r\n\t]);\r\n\t// const handleAdd = () => {\r\n\t// \tsetCathegories((caths) => [...caths, 'South Park']);\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>GiftExpertApp</h2>\r\n\t\t\t<AddCathegory setCathegories={setCathegories} />\r\n\r\n\t\t\t<hr />\r\n\t\t\t{/* <button onClick={handleAdd}>Agregar</button> */}\r\n\t\t\t<ol>\r\n\t\t\t\t{cathegories.map((cathegory) => (\r\n\t\t\t\t\t<GifGrid key={cathegory} cathegory={cathegory} />\r\n\t\t\t\t))}\r\n\t\t\t</ol>\r\n\t\t</>\r\n\t);\r\n};\r\nexport default GiftExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GiftExpertApp />,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}